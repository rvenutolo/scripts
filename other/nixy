#!/bin/bash

#from: https://gist.github.com/danbst/f07d9760ed15dd844e141177cf7dd478

readonly state_file="${XDG_CONFIG_HOME}/nixpkgs/nixy-pkgs"

readonly action="$1"
readonly package="$2"

mkdir -p $(dirname "${state_file}")
touch "${state_file}"

function update() {
  local env_expr="${XDG_CONFIG_HOME}/nixpkgs/declarative-env.nix"
  truncate -s 0 "${env_expr}"
  for ch in $(ls /nix/var/nix/profiles/per-user/root/channels | grep -v -e manifest -e binary-caches); do
    echo "let $ch = import <$ch> { }; in" >> "${env_expr}"
  done
  echo "let _pkgs = import <nixpkgs> { }; in" >> "${env_expr}"
  echo "rec { _paths = [" >> "${env_expr}"
  cat "${state_file}" | sort -u >> "${env_expr}"
  echo "             ]; " >> "${env_expr}"
  echo "      env = _pkgs.buildEnv {" >> "${env_expr}"
  echo "      name = ''declarative-collection''; " >> "${env_expr}"
  echo "      paths = _paths;" >> "${env_expr}"
  echo "}; }" >> "${env_expr}"
  \nix-env -Q -if "${env_expr}" -A env && echo "# Updated successfully!" >> "${env_expr}"
}

case "$action" in
  install | add)
    if (grep -Eq "^${package}\$" "${state_file}"); then
      echo "already installed, updating"
    else
      echo "scheduled installation update"
      echo "${package}" >> "${state_file}"
    fi
    update && echo 'Success' || sed -i "/^${package}$/d" "${state_file}"
    ;;
  uninstall | remove | delete)
    if (grep -Eq "^${package}\$" "${state_file}"); then
      sed -i "/^${package}\$/d" "${state_file}"
      update && echo 'Success'
    else
      echo 'Not installed'
    fi
    ;;
  list)
    cat "${state_file}"
    ;;
  *)
    echo "Command not specified. Try $(basename "$0") install nixpkgs.$2"
    echo 'Command list: install, uninstall, list'
    ;;
esac
