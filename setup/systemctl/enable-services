#!/usr/bin/env bash

set -euo pipefail

source "${SCRIPTS_DIR}/lib/functions.bash"
check_no_args "$@"

function check_and_enable_service() {
  local service_unit="$1"
  local service_desc="$2"
  local system_or_user="$3"
  local executable="$4-"
  if [[ -n "${executable}" ]] && ! executable_exists "${executable}"; then
    exit 0
  fi
  enable_service "${service_unit}" "${service_desc}" "${system_or_user}"
}

check_and_enable_service 'apparmor.service' 'App Armor' 'system' 'aa-enabled'
check_and_enable_service 'autotrash.timer' 'Autotrash' 'user' 'autotrash'
check_and_enable_service 'crashplan-pro.service' 'CrashPlan' 'system' 'CrashPlanDesktop'
check_and_enable_service 'cups.service' 'CUPS' 'system' 'cupsctl'
check_and_enable_service 'fail2ban.service' 'fail2ban' 'system' 'fail2ban-server'
check_and_enable_service 'journalctl-vacuum.timer' 'journnalctl-vacuum' 'user'
check_and_enable_service 'libvirtd.service' 'libvirtd' 'system' 'libvirtd'
check_and_enable_service 'nfsv4-server.service' 'NFS v4' 'system' 'exportfs'
## TODO check if reflector should be a user or system service
check_and_enable_service 'reflector.service' 'Reflector' 'system' 'reflector'
check_and_enable_service 'sshd.service' 'SSH daemon' 'system' 'sshd'
check_and_enable_service 'ssh-agent.service' 'SSH key agent' 'user' 'ssh-agent'
check_and_enable_service 'ufw.service' 'UFW' 'system' 'ufw'
