#!/usr/bin/env bash

set -euo pipefail

function path_remove() {
  PATH=$(echo -n "$PATH" | awk -v RS=: -v ORS=: '$0 != "'"$1"'"' | sed 's/:$//')
}

## remove my bin dirs from path so scripts that mask commands are no longer on PATH, ex: mvn
path_remove "${HOME}/.bin"
path_remove "${HOME}/.bin/other"

function find_native_packages() {
  set +e
  printf "%s\n" "$@" | pacman --query --owns --quiet - 2> /dev/null | pacman --query --native --quiet - | sort | uniq
  set -e
}

function find_aur_packages() {
  set +e
  printf "%s\n" "$@" | pacman --query --owns --quiet - 2> /dev/null | pacman --query --foreign --quiet - | sort | uniq
  set -e
}

function find_unknown_packages() {
  set +e
  printf "%s\n" "$@" | pacman --query --owns --quiet - 2>&1 1> /dev/null
  set -e
}

readonly cli_executables=(
  '7z'
  'ag' 'age' 'apropos' 'autotrash' 'await' 'awk' 'aws' 'aws_completer'
  'bat' 'bc' 'bmon' 'broot' 'btm' 'btop' 'bzip2'
  'cabextract' 'cargo' 'checkbashisms' 'cheat' 'chezmoi' 'choose' 'clamscan' 'cmake' 'colordiff' 'column' 'cpufetch' 'crontab' 'ctop' 'curl' 'curlie'
  'dash' 'delta' 'diff' 'diff-so-fancy' 'dig' 'distrobox' 'dmesg' 'doggo' 'dos2unix' 'duf' 'dust'
  'exa'
  'fail2ban-client' 'fcp' 'fd' 'fff' 'file' 'find' 'fish' 'free' 'fx' 'fzf'
  'gawk' 'gdu' 'git' 'gitui' 'glances' 'glow' 'go' 'gpg' 'gping' 'gradle' 'grep' 'groups' 'groovy' 'gs' 'gtop' 'gunzip' 'gzip'
  'highlight' 'hostname' 'hstr' 'http' 'hyperfine'
  'iconv' 'inotifywait' 'ip'
  'java' 'javac' 'jq' 'just'
  'kill' 'kotlin'
  'lazydocker' 'lazygit' 'less' 'lf' 'lfs' 'locate' 'lpass' 'lsblk' 'lsof'
  'maldet' 'man' 'mcs' 'micro' 'mn' 'moar' 'mount' 'mtr' 'mvn' 'mvnd'
  'nano' 'navi' 'ncdu' 'neofetch' 'nmap' 'nnn' 'nvim'
  'onefetch' 'oneshot' 'openconnect' 'openssl' 'openvpn'
  'pandoc' 'parallel' 'parquet-tools' 'paru' 'pcmanfm' 'pdu' 'pgrep' 'pigz' 'ping' 'pingg' 'pip' 'pip3' 'podman' 'pomchecker' 'procs' 'ps' 'psgrep' 'ptop' 'pv' 'px'
  'quickemu'
  'ranger' 'rg' 'riff' 'rsync' 'ruby' 'rustup'
  'sbt' 'scala' 'screen' 'sd' 'sed' 'shellcheck' 'shfmt' 'skeletal' 'slocate' 'snap' 'sntp' 'sops' 'spark-submit' 'spring' 'ssh' 'starship' 'su' 'sudo'
  'tabs2spaces' 'tar' 'tcpdump' 'tldr' 'tmux' 'tokei' 'top' 'tracepath' 'traceroute' 'trash' 'tree'
  'ufw' 'unlzma' 'unrar' 'unxz' 'unzip' 'usermod'
  'wget' 'whatis' 'which'
  'xargs' 'xh' 'xsel' 'xz'
  'yay'
  'zellij' 'zip' 'zoxide' 'zstd'
)

readonly gui_executables=(
  'alacritty'
  'backintime'
  'cheese' 'clamtk'
  'filelight' 'filezilla' 'flatpak' 'flatpak-spawn' 'flatseal'
  'gimp' 'github-desktop' 'gitkraken' 'gparted' 'gufw'
  'kate' 'kcalc'
  'libreoffice'
  'magnus' 'meld' 'mpv'
  'okular'
  'podman-desktop' 'postman'
  'qdirstat' 'quickgui' 'qutebrowser'
  'simplescreenrecorder' 'spectacle' 'stacer' 'subl'
  'timeshift' 'torbrowser-launcher'
  'visualvm' 'vlc' 'vncviewer'
  'wireshark'
)

readonly personal_cli_executables=(
  'dnuos'
  'eyeD3'
  'flac' 'flac2all' 'flac2mp3.pl'
  'lame'
  'magick' 'mediainfo' 'mogrify' 'mp3splt'
  'sox' 'speedtest'
)

readonly personal_gui_executables=(
  'bottles'
  'clapper'
  'dosbox'
  'easytag' 'emby-server'
  'kid3'
  'lutris'
  'mediainfo-gui'
  'picard' 'protontricks' 'protonup' 'puddletag'
  'qbittorrent'
  'skypeforlinux' 'soundkonverter' 'steam' 'strawberry'
  'tageditor'
  'ventoy' 'virt-manager' 'virsh'
  'winetricks'
  'zoom'
)

readonly all_packages=(
  "${cli_executables[@]}"
  "${gui_executables[@]}"
  "${personal_cli_executables[@]}"
  "${personal_gui_executables[@]}"
)

readonly this_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
readonly package_dir="$(readlink -f "${this_script_dir}/packages")"

echo "Generating native CLI packages"
find_native_packages "${cli_executables[@]}" >| "${package_dir}/native/cli.txt"
echo "Generating AUR CLI packages"
find_aur_packages "${cli_executables[@]}" >| "${package_dir}/aur/cli.txt"
echo "Generating native GUI packages"
find_native_packages "${gui_executables[@]}" >| "${package_dir}/native/gui.txt"
echo "Generating AUR GUI packages"
find_aur_packages "${gui_executables[@]}" >| "${package_dir}/aur/gui.txt"
echo "Generating personal native CLI packages"
find_native_packages "${personal_cli_executables[@]}" >| "${package_dir}/native/cli_personal.txt"
echo "Generating personal AUR CLI packages"
find_aur_packages "${personal_cli_executables[@]}" >| "${package_dir}/aur/cli_personal.txt"
echo "Generating personal native GUI packages"
find_native_packages "${personal_gui_executables[@]}" >| "${package_dir}/native/gui_personal.txt"
echo "Generating personal AUR GUI packages"
find_aur_packages "${personal_gui_executables[@]}" >| "${package_dir}/aur/gui_personal.txt"
echo "Generating unknown packages"
find_unknown_packages "${all_packages[@]}" >| "${package_dir}/unknown/unknown.txt"
