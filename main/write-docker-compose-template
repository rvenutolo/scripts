#!/usr/bin/env bash

set -euo pipefail

#shellcheck disable=SC1091
source "${SCRIPTS_DIR}/functions.bash"
check_exactly_1_arg "$@"

readonly name="$1"
constant_name="${name^^}"
readonly constant_name="${constant_name//-/_}"

readonly compose_file='./compose.yaml'
readonly env_template_file='./.env.template'

if file_exists "${compose_file}"; then
  die "${compose_file} exists"
fi

if file_exists "${env_template_file}"; then
  die "${env_template_file} exists"
fi

# shellcheck disable=SC2016
echo -n "networks:
  proxy:
    external: true
  ${name}-socket-proxy:

services:

  ${name}-socket-proxy:
    image: \${SOCKET_PROXY_IMAGE:-tecnativa/docker-socket-proxy}:\${SOCKET_PROXY_IMAGE_TAG:-latest}
    container_name: ${name}-socket-proxy
    hostname: ${name}-socket-proxy
    read_only: true
    tmpfs:
      - /run
    restart: unless-stopped
    networks:
      - ${name}-socket-proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - \${DOCKER_SOCKET:?}:/var/run/docker.sock
    environment:
      ## TODO figure these out
      ALLOW_START: 0
      ALLOW_STOP: 0
      ALLOW_RESTARTS: 0
      AUTH: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 0
      DISABLE_IPV6: 0
      DISTRIBUTION: 0
      EXEC: 0
      IMAGES: 0
      INFO: 0
      NETWORKS: 0
      NODES: 0
      POST: 0
      PLUGINS: 0
      SECRETS: 0
      SERVICES: 0
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 0
      VOLUMES: 0

  ${name}:
    image: \${${constant_name}_IMAGE:-${name}:\${${constant_name}_IMAGE_TAG:-latest}
    container_name: ${name}
    hostname: ${name}
    restart: unless-stopped
    networks:
      - proxy
      - ${name}-socket-proxy
    volumes:
      - \${DOCKER_APP_DATA_DIR:?}/${name}:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      DOCKER_HOST: tcp://${name}-socket-proxy:2375
      TZ: \${DOCKER_TZ:?}
" > "${compose_file}"

echo "## OPTIONAL OVERRIDES
${constant_name}_IMAGE=
${constant_name}_IMAGE_TAG=

## SOCKET PROXY OPTIONAL OVERRIDES
SOCKET_PROXY_IMAGE=
SOCKET_PROXY_IMAGE_TAG=
" > "${env_template_file}"
