#!/usr/bin/env bash

set -euo pipefail

#shellcheck disable=SC1091
source "${SCRIPTS_DIR}/functions.bash"
check_no_args "$@"

readonly keys_dir="${HOME}/.keys"
mkdir --parents "${keys_dir}"

readonly age_key_file="${keys_dir}/age.key"
if ! is_readable_file "${age_key_file}"; then
  log "Downloading: ${age_key_file}"
  age_key_content="$(download 'https://raw.githubusercontent.com/rvenutolo/crypt/main/keys/age.key')"
  if [[ -n "${age_key_content}" ]]; then
    log "Decrypting: ${age_key_file}"
    until age --decrypt --output "${age_key_file}" <<< "${age_key_content}"; do :; done
  else
    die "age key file content is empty"
  fi
fi

for filename in 'id_ed25519' 'id_ed25519.pub'; do
  key_file="${keys_dir}/${filename}"
  if ! is_readable_file "${key_file}"; then
    log "Downloading: ${key_file}"
    key_contents="$(download "https://raw.githubusercontent.com/rvenutolo/crypt/main/keys/${filename}")"
    if [[ -n "${key_contents}" ]]; then
      log "Decrypting: ${key_file}"
      age --decrypt --identity "${age_key_file}" --output "${key_file}" <<< "${key_contents}"
    else
      die "${filename} content is empty"
    fi
  fi
done

for url in $(download 'https://api.github.com/repos/rvenutolo/crypt/contents/keys' | jq -r '.[].download_url'); do
  filename="$(basename "${url}")"
  if [[ "${filename}" == 'age.key' || "${filename}" == 'id_ed25519' || "${filename}" == 'id_ed25519.pub' ]]; then
    continue
  fi
  key_file="${keys_dir}/${filename}"
  if ! is_readable_file "${key_file}" && prompt_ny "Download ${key_file}?"; then
    log "Downloading: ${key_file}"
    key_contents="$(download "https://raw.githubusercontent.com/rvenutolo/crypt/main/keys/${filename}")"
    if [[ -n "${key_contents}" ]]; then
      log "Decrypting: ${key_file}"
      age --decrypt --identity "${age_key_file}" --output "${key_file}" <<< "${key_contents}"
    else
      die "${filename} content is empty"
    fi
  fi
done

find "${keys_dir}" -type d -exec chmod 700 {} \;
find "${keys_dir}" -type f -exec chmod 600 {} \;
