#!/usr/bin/env bash

set -euo pipefail

#shellcheck disable=SC1091
source "${SCRIPTS_DIR}/functions.bash"
check_no_args "$@"

if ! executable_exists 'flatpak'; then
  die 'flatpak executable not found'
fi

readonly flatpaks_from_package_list=($(get_universal_packages 'flatpak' | sort))
readonly flatpaks_installed=($(flatpak list --user --app --columns application | sort))
readonly flatpaks_to_install=($(comm -23 <(array_to_lines "${flatpaks_from_package_list[@]}") <(array_to_lines "${flatpaks_installed[@]}")))
readonly flatpaks_to_remove=($(comm -13 <(array_to_lines "${flatpaks_from_package_list[@]}") <(array_to_lines "${flatpaks_installed[@]}")))

if (("${#flatpaks_to_install[@]}")) && prompt_yn 'Install missing Flatpak packages?'; then
  log 'Installing missing Flatpak packages'
  array_to_lines "${flatpaks_to_install[@]}" | xargs --no-run-if-empty flatpak install --user --noninteractive
  log 'Installed missing Flatpak packages'
fi

for flatpak_to_remove in "${flatpaks_to_remove[@]}"; do
  flatpak_name="$(flatpak list --user --app --columns name --columns application | awk -F $'\t' "\$2 == \"${flatpak_to_remove}\" { print \$1 }")"
  if prompt_yn "Remove ${flatpak_name} (${flatpak_to_remove})?"; then
    log "Removing ${flatpak_name} (${flatpak_to_remove})"
    flatpak remove --user --noninteractive "${flatpak_to_remove}"
    log "Removed ${flatpak_name} (${flatpak_to_remove})"
  fi
done

log 'Removing unused Flatpak runtimes'
flatpak uninstall --user --noninteractive --unused
log 'Removed unused Flatpak runtimes'

log 'Updating all Flatpak packages'
flatpak update --user --noninteractive
log 'Updated all Flatpak packages'

if flatpak list --user --app | contains_word 'com.google.Chrome'; then
  flatpak override --user --filesystem="${HOME}/.local/share/applications:create" --filesystem="${HOME}/.local/share/icons:create" 'com.google.Chrome'
fi
